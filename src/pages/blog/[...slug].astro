---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import { render } from "astro:content";
import BlogsIndex from "../../pages/blog/index.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map((post) => {
    const recentPosts = posts
      .filter((recentPost) => recentPost.data.title !== post.data.title)
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
      .slice(0, 3);
    return {
      params: { slug: post.id },
      props: { post, recentPosts },
    };
  });
}

type Props = { post: CollectionEntry<"blog">; recentPosts: CollectionEntry<"blog">[] };

const { post, recentPosts } = Astro.props;
const { Content } = await render(post);
---

<BlogPost {...post.data}>
  <Content />
  <BlogsIndex postsFromProps={recentPosts} />
</BlogPost>
